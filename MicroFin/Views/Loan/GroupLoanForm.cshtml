@model MicroFin.Models.GroupLoan
@using System.Globalization;
@{
    ViewBag.Title = "Group Loan Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div id="LoanForm" class="page-wrapper bg-gra-03 p-t-45 p-b-50">
    <div class="wrapper wrapper--w790">
        <div class="card card-5">
            <div class="card-heading">
                <h2 class="title">Loan</h2>
            </div>
            <div class="card-body">
                @using (Html.BeginForm("GroupLoan", "Loan", FormMethod.Post,new { @onsubmit="return (validateOnSubmit());"}))
                {
                    @Html.AntiForgeryToken()

                    <!--GroupName and GroupId -->
                    <div class="form-row m-b-55">
                        <div class="name">Group</div>
                        <div class="value">
                            <div class="row row-space">
                                <div class="col-2">
                                    <div class="input-group-desc">
                                        @Html.TextBoxFor(m => m.GroupName, new { id = "GroupName", @autocomplete = "off", @class = "input--style-5", @placeholder = "select group", @required = "true", @tabindex = "1" })
                                        <p id="errGroupName" style='color:red;'>  </p>
                                    </div>
                                </div>
                                <div class="col-2">
                                    <div class="input-group-desc">
                                        @Html.TextBoxFor(m => m.GroupId, new { id = "GroupId", @class = "input--style-5", @onkeydown = "event.preventDefault()", @required = "true", @autocomplete = "off" })
                                        <label class="label--desc">Group Id</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!--CenterName and LeaderName -->
                    <div class="form-row m-b-55">
                        <div class="name">Center/Leader</div>
                        <div class="value">
                            <div class="row row-space">
                                <div class="col-2">
                                    <div class="input-group-desc">
                                        @Html.TextBoxFor(m => m.CenterName, new { id = "CenterName", @class = "input--style-5", @onkeydown = "event.preventDefault()", @required = "true", @autocomplete = "off" })
                                        <label class="label--desc">Center</label>
                                    </div>
                                </div>
                                <div class="col-2">
                                    <div class="input-group-desc">
                                        @Html.TextBoxFor(m => m.LeaderName, new { id = "LeaderName", @class = "input--style-5", @onkeydown = "event.preventDefault()", @required = "true", @autocomplete = "off" })
                                        <label class="label--desc">Leader</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!--Check Group-->
                    <div>
                        <button class="btn btn--blue" type="button" onclick="checkGroup();" tabindex="2">Get</button>
                    </div>

                    <div id="loanInfo" style="display:none">
                        <!--Loan Purpose -->
                        <div class="form-row">
                            <div class="name">Loan Purpose</div>
                            <div class="value">
                                <div class="input-group">
                                    @Html.TextBoxFor(m => m.LoanPurpose, new { id = "LoanPurpose", @class = "input--style-5", @autocomplete = "off", @maxlength = "40", @required = "true", @tabindex = "3" })
                                </div>
                            </div>
                        </div>

                        <!--Loan Amount -->
                        <div class="form-row">
                            <div class="name">Loan Amount(Rs.)</div>
                            <div class="value">
                                <div class="input-group">
                                    @Html.TextBoxFor(m => m.LoanAmount, new { id = "LoanAmount", @class = "input--style-5", @autocomplete = "off", @required = "true", @tabindex = "4" })
                                </div>
                            </div>
                        </div>

                        <!--Loan Date -->
                        <div class="form-row">
                            <div class="name">Loan Date</div>
                            <div class="value">
                                <div class="input-group">
                                    @Html.TextBoxFor(m => m.LoanDate, new
                                                {
                                                    @class = "input--style-5 js-datepicker",
                                                    @required = "true",
                                                    @Value = (Model == null || Model.LoanDate == null) ? "" : Model.LoanDate.ToString("dd/MM/yyyy", CultureInfo.InvariantCulture),
                                                    @autocomplete = "off",
                                                    @tabindex = "5",
                                                    @pattern = @"^(?:(?:31(\/|-|\.)(?:0?[13578]|1[02]))\1|(?:(?:29|30)(\/|-|\.)(?:0?[13-9]|1[0-2])\2))(?:(?:1[6-9]|[2-9]\d)?\d{2})$|^(?:29(\/|-|\.)0?2\3(?:(?:(?:1[6-9]|[2-9]\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\d|2[0-8])(\/|-|\.)(?:(?:0?[1-9])|(?:1[0-2]))\4(?:(?:1[6-9]|[2-9]\d)?\d{2})$"
                                                })
                                    <p id="errLoanDate" style='color:red;'> </p>
                                </div>
                            </div>
                        </div>

                        <!--ProcessingFeeRate and ProcessingFee -->
                        <div class="form-row m-b-55">
                            <div class="name">Processing Fee</div>
                            <div class="value">
                                <div class="row row-space">
                                    <div class="col-2">
                                        <div class="input-group-desc">
                                            @Html.TextBoxFor(m => m.ProcessingFeeRate, new { id = "ProcessingFeeRate", @autocomplete = "off", @class = "input--style-5", @required = "true", @tabindex = "6" })
                                            <label class="label--desc">Rate(%)</label>
                                        </div>
                                    </div>
                                    <div class="col-2">
                                        <div class="input-group-desc">
                                            @Html.TextBoxFor(m => m.ProcessingFee, new { id = "ProcessingFee", @class = "input--style-5", @autocomplete = "off", @onkeydown = "event.preventDefault()", @required = "true" })
                                            <label class="label--desc">Processing Fee(Rs.)</label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!--InsuranceRate and Insurance-->
                        <div class="form-row m-b-55">
                            <div class="name">Insurance Rate</div>
                            <div class="value">
                                <div class="row row-space">
                                    <div class="col-2">
                                        <div class="input-group-desc">
                                            @Html.TextBoxFor(m => m.InsuranceRate, new { id = "InsuranceRate", @autocomplete = "off", @class = "input--style-5", @required = "true", @tabindex = "7" })
                                            <label class="label--desc">Rate(%)</label>
                                        </div>
                                    </div>
                                    <div class="col-2">
                                        <div class="input-group-desc">
                                            @Html.TextBoxFor(m => m.Insurance, new { id = "Insurance", @class = "input--style-5", @autocomplete = "off", @onkeydown = "event.preventDefault()", @required = "true" })
                                            <label class="label--desc">Insurance</label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!--Tenure -->
                        <div class="form-row">
                            <div class="name">Tenure(Weeks)</div>
                            <div class="value">
                                <div class="input-group">
                                    @Html.TextBoxFor(m => m.Tenure, new { id = "Tenure", @class = "input--style-5", @autocomplete = "off", @required = "true", @tabindex = "8" })
                                </div>
                            </div>
                        </div>

                        <!--InterestRate-->
                        <div class="form-row m-b-55">
                            <div class="name">Interest</div>
                            <div class="value">
                                <div class="row row-space">
                                    <div class="col-2">
                                        <div class="input-group-desc">
                                            @Html.TextBoxFor(m => m.InterestRate, new { id = "InterestRate", @autocomplete = "off", @class = "input--style-5", @required = "true", @tabindex = "9" })
                                            <label class="label--desc">Rate(%)</label>
                                        </div>
                                    </div>
                                    <div class="col-2">
                                        <div class="input-group-desc">
                                            <button class="btn btn--blue" type="button" onclick="calculateInterestRate();">Calculate</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>


                        <!--EWI -->
                        <div class="form-row">
                            <div class="name">Weekly Due (Rs.)</div>
                            <div class="value">
                                <div class="input-group">
                                    @Html.TextBoxFor(m => m.Ewi, new { id = "Ewi", @class = "input--style-5", @autocomplete = "off", @onkeydown = "event.preventDefault()", @required = "true" })
                                    <p id="ErrEwi" style='color:red;'> @ViewBag.ErrEWi </p>
                                </div>
                            </div>
                        </div>

                        <!--RepaymentAmount -->
                        <div class="form-row">
                            <div class="name">Repayment Amount</div>
                            <div class="value">
                                <div class="input-group">
                                    @Html.TextBoxFor(m => m.RepaymentAmount, new { id = "RepaymentAmount", @class = "input--style-5", @autocomplete = "off", @onkeydown = "event.preventDefault()", @required = "true" })
                                </div>
                            </div>
                        </div>


                        <!--Save-->
                        <div>
                            <button class="btn btn--radius-2 btn--red" type="submit" tabindex="10">Save</button>
                            <p style='color:red;'> @ViewBag.ErrTryAgain </p>
                        </div>
                    </div>
                }
                </div>
        </div>
    </div>
</div>
<script>
    createAutoComplete3('http://' + window.location.host + '/api/GetGroupList', 'GroupId', 'CenterName', 'LeaderName', 'GroupName');
    document.getElementById("GroupName").addEventListener("keydown", function (e) {
        if (document.getElementById("GroupId").value == "") {
            document.getElementById("loanInfo").style.display = 'none';
        }
    });

    document.getElementById("LoanAmount").addEventListener("keyup", function (e) {
        updateLoanFee();
        updateEwi();
    });
    document.getElementById("ProcessingFeeRate").addEventListener("keyup", function (e) {
        updateLoanFee();
    });
    document.getElementById("InsuranceRate").addEventListener("keyup", function (e) {
        updateLoanFee();
    });
    document.getElementById("InterestRate").addEventListener("keyup", function (e) {
        updateEwi();
    });
    document.getElementById("Tenure").addEventListener("keyup", function (e) {
        updateEwi();
    });

    function checkGroup() {
	    if (document.getElementById('GroupId').value == '') {
	        document.getElementById("errGroupName").innerHTML = "Select a valid group";
	        document.getElementById("loanInfo").style.display = 'none';
		    return;
	    }
	
	    var xhttp = new XMLHttpRequest();
	    document.getElementById("errGroupName").innerHTML = "";
	    xhttp.onreadystatechange = function() {
	        if (this.readyState == 4 && this.status == 200) {
	            var response = this.responseText;
                if (response == 'Not found') {
                    document.getElementById("errGroupName").innerHTML = "Not found";
                    document.getElementById("loanInfo").style.display = 'none';
                } else if (response == 'Success') {
                    document.getElementById("loanInfo").style.display = 'block';
                    document.getElementById("LoanPurpose").focus();
                } else {
                    document.getElementById("errGroupName").innerHTML = 'Loan already exists for one or more member';
                    document.getElementById("loanInfo").style.display = 'none';
                }
		    }
	    };
	    xhttp.open("GET", "../api/CheckGroup/"
			    + document.getElementById('GroupId').value, true);
	    xhttp.send();
    }

    function updateEwi() {
        try {
            var loanAmount = Number(document.getElementById("LoanAmount").value);
            var tenure = Number(document.getElementById("Tenure").value);
            var interestRate = Number(document.getElementById("InterestRate").value) / 5200;
            var factor = Math.pow(1 + interestRate, tenure);
            var ewi = Math.round(loanAmount * interestRate * factor / (factor - 1));
            //var repaymentAmount = ewi * tenure + Number(document.getElementById("ProcessingFee").value)
            //                      + Number(document.getElementById("Insurance").value);
            var repaymentAmount = ewi * tenure
            document.getElementById("Ewi").value = ewi;
            document.getElementById("RepaymentAmount").value = repaymentAmount;
        } catch (e) { }
    }

    function updateInterestRate() {
        try {
            var loanAmount = Number(document.getElementById("LoanAmount").value);
            var tenure = Number(document.getElementById("Tenure").value);
            var ewi = Number(document.getElementById("Ewi").value);
            //var interestRate = Number(document.getElementById("InterestRate").value) / 5200;
            var factor = Math.pow(1 + interestRate, tenure);
            var ewi = Math.round(loanAmount * interestRate * factor / (factor - 1));
            //var repaymentAmount = ewi * tenure + Number(document.getElementById("ProcessingFee").value)
            //                      + Number(document.getElementById("Insurance").value);
            var repaymentAmount = ewi * tenure
            document.getElementById("Ewi").value = ewi;
            document.getElementById("RepaymentAmount").value = repaymentAmount;
        } catch (e) { }
    }

    function updateLoanFee() {
        try {
            document.getElementById("ProcessingFee").value = Number(document.getElementById("ProcessingFeeRate").value)
				    * Number(document.getElementById("LoanAmount").value) / 100;

        } catch (e) { }
        try {
            document.getElementById("Insurance").value = Number(document.getElementById("InsuranceRate").value)
				    * Number(document.getElementById("LoanAmount").value) / 100;
        } catch (e) { }
        
    }

    function calculateInterestRate() {
        try {
            var loanAmount = Number(document.getElementById("LoanAmount").value);
            var tenure = Number(document.getElementById("Tenure").value);
            var ewi = prompt("Enter Target Due amount", "");
            ewi = Number(ewi);
            var interestRate = 40.0;
            var currentEwi = 0.0;
            var currentInterestRate = 0.0;
            var factor = 0.0;
            do {
                interestRate = interestRate + 0.01;
                currentInterestRate = interestRate / 5200;
                factor = Math.pow(1 + currentInterestRate, tenure);
                currentEwi = loanAmount * currentInterestRate * factor / (factor - 1);
            } while (currentEwi < ewi);

            var repaymentAmount = ewi * tenure;
            document.getElementById("InterestRate").value = Math.round(interestRate * 100) / 100.0;
            updateEwi();
        } catch (e) { }
    }
    
    function validateOnSubmit() {
        if (document.getElementById("RepaymentAmount").value == '' || document.getElementById("RepaymentAmount").value == 'NaN') {
            document.getElementById("ErrEwi").innerHTML = 'Fill all data';
            return false;
        } else {
            document.getElementById("ErrEwi").innerHTML == '';
            return true;
        }
    }
</script>